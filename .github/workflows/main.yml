name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: us-east-1
          ECR_REGISTRY: <aws_account_id>.dkr.ecr.<region>.amazonaws.com
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region $AWS_REGION
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build, tag, and push the Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REPOSITORY: <ecr_repository_name>
          ECR_REGISTRY: <aws_account_id>.dkr.ecr.<region>.amazonaws.com
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        env:
          CLUSTER_NAME: <cluster_name>
          SERVICE_NAME: <service_name>
          TASK_DEFINITION_FILE: ecs-task-def.json
        run: |
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
