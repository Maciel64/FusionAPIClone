name: Photo
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/photo
    metadata:
      groupName: Photo
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: store
      description: 'Create a new photo for the specified user or update'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: 'Coworking UUID.'
        required: true
        example: 0b826f29-0c0f-4c4b-ae0f-5c54d4d4c214
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 0b826f29-0c0f-4c4b-ae0f-5c54d4d4c214
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The type of resources.'
        required: false
        example: 'avatar, coworking, room'
        type: required
        custom: []
      uuid:
        name: uuid
        description: 'Must be a valid UUID.'
        required: true
        example: 51b88eac-ef35-3878-baac-d51804b9ffb1
        type: string
        custom: []
      photo:
        name: photo
        description: 'List Photos of Coworking.'
        required: false
        example: sed
        type: required
        custom: []
    cleanBodyParameters:
      type: 'avatar, coworking, room'
      uuid: 51b88eac-ef35-3878-baac-d51804b9ffb1
      photo: sed
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status":true,
           "message":"Photo created successfully",
           "data":{
             "name":"8b2CkrABFCs9AZ3UZyPItDGliEXyJdu4G4uHRNd7.jpg",
             "url":"http:\/\/localhost:9000\/storage\/avatars\/8b2CkrABFCs9AZ3UZyPItDGliEXyJdu4G4uHRNd7.jpg",
             "uuid":"26c8dd89-572f-4971-b4fe-a6f8f5360e4c"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/photo/{uuid}'
    metadata:
      groupName: Photo
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: show
      description: 'Display the specified resource.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: 'The UUID of the photo.'
        required: true
        example: 07950d43-386c-4f0f-bb66-7b26778fc656
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 07950d43-386c-4f0f-bb66-7b26778fc656
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Photo retrieved successfully",
            "data": {
              "uuid": "07950d43-386c-4f0f-bb66-7b26778fc656",
              "name": "a408b342-df0d-4e8e-9b92-0fe163bcafc2.jpeg",
              "url": "http://localhost:9000/storage/avatar/a408b342-df0d-4e8e-9b92-0fe163bcafc2.jpeg"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/photo/{uuid}/{type}'
    metadata:
      groupName: Photo
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: destroy
      description: 'Remove the specified photo.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: 'The uuid of the photo.'
        required: true
        example: 4ec5605b-6f27-40c1-877c-2535ef682ce1
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: eius
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4ec5605b-6f27-40c1-877c-2535ef682ce1
      type: eius
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Photo deleted successfully",
           "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/photo/bulk
    metadata:
      groupName: Photo
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: bulk.store
      description: 'Create a bulk photos for the specified user, coworking or room.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: 'Coworking UUID.'
        required: true
        example: 0b826f29-0c0f-4c4b-ae0f-5c54d4d4c214
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 0b826f29-0c0f-4c4b-ae0f-5c54d4d4c214
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The type of resources.'
        required: true
        example: 'avatar, coworking, room'
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'Must be a valid UUID.'
        required: true
        example: df5686e9-1a32-38cf-9806-99a9180f2b35
        type: string
        custom: []
      photos:
        name: photos
        description: 'List Photos of Coworking.'
        required: true
        example: []
        type: object
        custom: []
    cleanBodyParameters:
      type: 'avatar, coworking, room'
      uuid: df5686e9-1a32-38cf-9806-99a9180f2b35
      photos: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Photo created successfully",
            "data": [
              {
                "name": "kB8YDExGdjsdevV9YfN175LicYXZadvcuqVcN4iM.jpg",
                "url": "http://localhost:9000/storage/coworkings/kB8YDExGdjsdevV9YfN175LicYXZadvcuqVcN4iM.jpg",
                "uuid": "dd211e3f-d9cf-4cdf-a5d2-7903786d844d"
              },
              {
                "name": "D30hCzWN1miUTqKW1aIKX6sCIGOhUTjUU3VP1WqR.jpg",
                "url": "http://localhost:9000/storage/coworkings/D30hCzWN1miUTqKW1aIKX6sCIGOhUTjUU3VP1WqR.jpg",
                "uuid": "2de798dd-de44-48a6-9998-f2ea3d4821d8"
              },
              {
                "name": "k9HZdDlehCwICKNVmluhcEgl08ABCB8eDTO4PFoM.jpg",
                "url": "http://localhost:9000/storage/coworkings/k9HZdDlehCwICKNVmluhcEgl08ABCB8eDTO4PFoM.jpg",
                "uuid": "266b8b26-0cb0-457a-946d-59e7721de2bb"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
